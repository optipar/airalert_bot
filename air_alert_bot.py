import os
import time
import requests
import asyncio
from datetime import datetime
from telegram import Bot, InputFile

# –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ (–Ω–∞–ª–∞—à—Ç—É–π —É Railway –∞–±–æ .env)
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")  # ID –∞–±–æ @–Ω–∞–∑–≤–∞_–∫–∞–Ω–∞–ª—É
bot = Bot(token=BOT_TOKEN)

# URL API
REGIONS_API_URL = "https://alerts.com.ua/api/regions"
MAP_IMAGE_URL = "https://alerts.in.ua/static/img/map.png"

# –°—Ç–∞–Ω –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
last_alert_message = None

def get_formatted_time():
    return datetime.now().strftime("%H:%M")

async def check_alerts():
    global last_alert_message
    try:
        # –û—Ç—Ä–∏–º—É—î–º–æ JSON
        response = requests.get(REGIONS_API_URL)
        data = response.json()

        # –Ø–∫—â–æ –ø—Ä–∏–π—à–æ–≤ dict, –∞ –Ω–µ list ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
        if isinstance(data, dict):
            raise TypeError("–û—á—ñ–∫—É–≤–∞–≤—Å—è —Å–ø–∏—Å–æ–∫, –∞–ª–µ –æ—Ç—Ä–∏–º–∞–Ω–æ dict")

        # –°—Ç–≤–æ—Ä—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ç—Ä–∏–≤–æ–≥
        alerts = []
        for region in data:
            region_name = region["name"]
            if region.get("alerts"):
                alerts.append(f"üî¥ {get_formatted_time()} –ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞ –≤ {region_name}")

            for area in region.get("areas", []):
                if area.get("alert"):
                    alerts.append(f"üî¥ {get_formatted_time()} –ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞ –≤ {area['name']}")

        # –Ø–∫—â–æ –Ω–µ–º–∞—î —Ç—Ä–∏–≤–æ–≥
        if not alerts:
            message = f"‚úÖ –í—Å–µ —Å–ø–æ–∫—ñ–π–Ω–æ. {get_formatted_time()}"
            if message != last_alert_message:
                await bot.send_message(chat_id=CHAT_ID, text=message)
                last_alert_message = message
            return

        # –§–æ—Ä–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        caption = "\n".join(alerts)
        if caption == last_alert_message:
            return  # –ù–µ –Ω–∞–¥—Å–∏–ª–∞—î–º–æ –¥—É–±–ª—å

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–∞—Ä—Ç—É
        img = requests.get(MAP_IMAGE_URL)
        with open("map.png", "wb") as f:
            f.write(img.content)

        # –ù–∞–¥—Å–∏–ª–∞—î–º–æ —Ñ–æ—Ç–æ –∑ –ø—ñ–¥–ø–∏—Å–æ–º
        with open("map.png", "rb") as photo:
            await bot.send_photo(chat_id=CHAT_ID, photo=photo, caption=caption)

        last_alert_message = caption

    except Exception as e:
        error_message = f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Ç—Ä–∏–≤–æ–≥: {e}"
        if error_message != last_alert_message:
            await bot.send_message(chat_id=CHAT_ID, text=error_message)
            last_alert_message = error_message

async def main():
    while True:
        await check_alerts()
        await asyncio.sleep(60)

if __name__ == "__main__":
    asyncio.run(main())
